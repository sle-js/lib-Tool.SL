interface Node {
    kind: string;
    loc: SourceLocation | null;
}


interface SourceLocation {
    source: string | null;
    start: Position;
    end: Position;
}


interface Position {
    line: int;
    column: int;
}


interface Name <: Node {
    kind: "Name";
    value: string;
}


interface Module {
    kind: "Module";
    declarations : [ Declaration ];
}


interface Declaration <: Node {
    name: string;
}


interface NameDeclaration <: Declaration {
    kind: "NameDeclaration";
    expression: Expression;
}


interface Expression <: Node {
}


interface Apply <: Expression {
    kind: "Apply";
    operator: Expression;
    operand: Expression;
}


interface Lambda <: Expression {
    kind: "Lambda";
    names: [ Name ];
    expression: Expression;
}


interface Binary <: Expression {
    kind: "Binary";
    operator: Name;
    left: Expression;
    right: Expression;
}


interface ConstantInteger <: Expression {
    kind: "ConstantInteger";
    value: number;
}


interface ConstantBoolean <: Expression {
    kind: "ConstantBoolean";
    value: boolean;
}


interface ConstantString <: Expression {
    kind: "ConstantString";
    value: boolean;
}


interface Not <: Expression {
    kind: "Not";
    expression: Expression;
}


interface LowerIDReference <: Expression {
    kind: "LowerIDReference";
    expression: Expression;
}