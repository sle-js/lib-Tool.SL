-- Multiple qualified name imports from a file
use file:../Native/Data/Array import (length, findMap-, append as arrayAppend, prepend as arrayPrepend-)
-- ast
{
  "imports": [
    {
      "content": [
        2,
        {
          "urn": [
            "file",
            "../Native/Data/Array"
          ],
          "names": [
            {
              "name": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 38
                  },
                  "end": {
                    "line": 1,
                    "column": 43
                  }
                },
                "value": "length"
              },
              "qualified": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 38
                  },
                  "end": {
                    "line": 1,
                    "column": 43
                  }
                },
                "value": "length"
              },
              "public": true
            },
            {
              "name": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 46
                  },
                  "end": {
                    "line": 1,
                    "column": 52
                  }
                },
                "value": "findMap"
              },
              "qualified": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 46
                  },
                  "end": {
                    "line": 1,
                    "column": 52
                  }
                },
                "value": "findMap"
              },
              "public": false
            },
            {
              "name": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 56
                  },
                  "end": {
                    "line": 1,
                    "column": 61
                  }
                },
                "value": "append"
              },
              "qualified": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 66
                  },
                  "end": {
                    "line": 1,
                    "column": 76
                  }
                },
                "value": "arrayAppend"
              },
              "public": true
            },
            {
              "name": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 79
                  },
                  "end": {
                    "line": 1,
                    "column": 85
                  }
                },
                "value": "prepend"
              },
              "qualified": {
                "kind": "Name",
                "loc": {
                  "source": "002.txt",
                  "start": {
                    "line": 1,
                    "column": 90
                  },
                  "end": {
                    "line": 1,
                    "column": 101
                  }
                },
                "value": "arrayPrepend"
              },
              "public": false
            }
          ]
        }
      ]
    }
  ],
  "declarations": []
}
-- js
const $$0 = mrequire("file:../Native/Data/Array");
const length = $$0.length;
const findMap = $$0.findMap;
const arrayAppend = $$0.append;
const arrayPrepend = $$0.prepend;

module.exports = {
    length,
    arrayAppend
};
