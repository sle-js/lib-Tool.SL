-- n -> 0 - n
n -> 0 - n
-- ast parseLambdaExpression
{
  "kind": "Lambda",
  "loc": {
    "source": "001.txt",
    "start": {
      "line": 1,
      "column": 1
    },
    "end": {
      "line": 1,
      "column": 10
    }
  },
  "names": [
    {
      "kind": "Name",
      "loc": {
        "source": "001.txt",
        "start": {
          "line": 1,
          "column": 1
        },
        "end": {
          "line": 1,
          "column": 1
        }
      },
      "value": "n"
    }
  ],
  "expression": {
    "kind": "Binary",
    "loc": {
      "source": "001.txt",
      "start": {
        "line": 1,
        "column": 6
      },
      "end": {
        "line": 1,
        "column": 10
      }
    },
    "operator": {
      "kind": "Name",
      "loc": {
        "source": "001.txt",
        "start": {
          "line": 1,
          "column": 8
        },
        "end": {
          "line": 1,
          "column": 8
        }
      },
      "value": "-"
    },
    "left": {
      "kind": "ConstantInteger",
      "loc": {
        "source": "001.txt",
        "start": {
          "line": 1,
          "column": 6
        },
        "end": {
          "line": 1,
          "column": 6
        }
      },
      "value": 0
    },
    "right": {
      "kind": "LowerIDReference",
      "loc": {
        "source": "001.txt",
        "start": {
          "line": 1,
          "column": 10
        },
        "end": {
          "line": 1,
          "column": 10
        }
      },
      "name": "n"
    }
  }
}